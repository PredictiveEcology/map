% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map.R
\name{mapAdd}
\alias{mapAdd}
\alias{mapAdd.default}
\alias{mapAdd.spatialObjects}
\title{Append a spatial object to map}
\usage{
mapAdd(object, map, layerName, overwrite = FALSE, ...)

\method{mapAdd}{default}(object = NULL, map = new("map"),
  layerName = NULL, overwrite = FALSE,
  columnNameForLabels = character(), leaflet = TRUE,
  isStudyArea = FALSE, ...)

\method{mapAdd}{spatialObjects}(object, map = new("map"),
  layerName = NULL, overwrite = FALSE, columnNameForLabels = NULL,
  leaflet = TRUE, isStudyArea = NULL, envir = NULL, ...)
}
\arguments{
\item{object}{TODO: document this}

\item{map}{TODO: document this}

\item{layerName}{TODO: document this}

\item{overwrite}{TODO: document this}

\item{...}{passed to reproducible::postProcess and reproducible::projectInputs and
reproducible::fixErrors and reproducible::prepInputs}

\item{columnNameForLabels}{TODO: document this}

\item{leaflet}{TODO: document this}

\item{isStudyArea}{TODO: document this}

\item{envir}{An optional environment. If supplied, then the object
will not be placed "into" the maps slot, rather the environment label will
be placed into the maps slot. Upon re}
}
\description{
If \code{isStudyArea = TRUE}, then several things will be triggered:
\enumerate{
  \item This layer will be added to metadata with \code{studyArea} set to
        \code{max(studyArea(map)) + 1}.
  \item update CRS slot to be the CRS of the study area.
}
}
\examples{
library(sp)
library(raster)
coords <- structure(c(-122.98, -116.1, -99.2, -106, -122.98,
                      59.9, 65.73, 63.58, 54.79, 59.9),
                    .Dim = c(5L, 2L))
Sr1 <- Polygon(coords)
Srs1 <- Polygons(list(Sr1), "s1")
StudyArea <- SpatialPolygons(list(Srs1), 1L)
crs(StudyArea) <- "+init=epsg:4326 +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
StudyArea <- SpatialPolygonsDataFrame(StudyArea,
                           data = data.frame(ID = 1, shinyLabel = "zone2"),
                           match.ID = FALSE)

ml <- mapAdd(StudyArea, isStudyArea = TRUE, layerName = "Small Study Area")

if (require("SpaDES.tools")) {
  smallStudyArea <- randomPolygon(studyArea(ml), 1e4)
  smallStudyArea <- SpatialPolygonsDataFrame(smallStudyArea,
                           data = data.frame(ID = 1, shinyLabel = "zone1"),
                           match.ID = FALSE)
  ml <- mapAdd(smallStudyArea, ml, isStudyArea = TRUE, filename2 = NULL,
               envir = .GlobalEnv, layerName = "Smaller Study Area") # adds a second studyArea within 1st

  rasTemplate <- raster(extent(studyArea(ml)), res = 0.001)
  tsf <- randomPolygons(rasTemplate, numTypes = 3)*80
  crs(tsf) <- crs(ml)
  vtm <- randomPolygons(tsf, numTypes = 4)
  levels(vtm) <- data.frame(ID = sort(unique(vtm[])),
                            Factor = c("black spruce", "white spruce", "aspen", "fir"))
  crs(vtm) <- crs(ml)
  ml <- mapAdd(tsf, ml, filename2 = "tsf1.tif", layerName = "tsf1",
               tsf = TRUE,
               analysisGroup = "tsf1_vtm1", leaflet = FALSE, overwrite = TRUE)
  ml <- mapAdd(vtm, ml, filename2 = "vtm1.tif", layerName = "vtm1",
               vtm = TRUE,
               analysisGroup = "tsf1_vtm1", leaflet = FALSE, overwrite = TRUE)

  ageClasses <- c("Young", "Immature", "Mature", "Old")
  ageClassCutOffs <- c(0, 40, 80, 120)
  ml <- mapLeadingByStage(ml, ageClasses = ageClasses,
                    ageClassCutOffs = ageClassCutOffs)
  ml <- mapLargePatches(ml, ageClasses = ageClasses,
                    ageClassCutOffs = ageClassCutOffs)

  # Add a second polygon, trigger
  smallStudyArea2 <- randomPolygon(studyArea(ml), 1e4)
  smallStudyArea2 <- SpatialPolygonsDataFrame(smallStudyArea2,
                           data = data.frame(ID = 1, shinyLabel = "zone1"),
                           match.ID = FALSE)
  ml <- mapAdd(smallStudyArea2, ml, isStudyArea = FALSE, filename2 = NULL, overwrite = TRUE,
               envir = .GlobalEnv, layerName = "Smaller Study Area 2") # adds a second studyArea within 1st
  ml <- mapLeadingByStage(ml, ageClasses = ageClasses,
                    ageClassCutOffs = ageClassCutOffs)


}
}
