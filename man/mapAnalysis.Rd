% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map-analysis.R
\name{mapAnalysis}
\alias{mapAnalysis}
\title{Generic analysis for map objects}
\usage{
mapAnalysis(
  map,
  functionName = NULL,
  purgeAnalyses = NULL,
  useParallel = getOption("map.useParallel", FALSE),
  ...
)
}
\arguments{
\item{map}{Optional map object. If not provided, then one will be
created. If provided, then the present \code{object} or options passed to
\code{prepInputs} e.g., \code{url}, will be appended to this \code{map}.}

\item{functionName}{A function name that will be run on combinations of
inputs in the map object. See details.}

\item{purgeAnalyses}{A character string indicating which analysis group
combination or part thereof (e.g., the name entered into the row under
\code{analysisGroup2} column of the \code{map@metadata} or a \code{functionName}.}

\item{useParallel}{Logical. If \code{TRUE}, then if there is more than one
calculation to do at any stage, it will create and use a parallel
cluster via \code{makeOptimalCluster}.
If running analyses in parallel, it may be useful to pass a function (via \code{clInit})
to be run on each of the nodes immediately upon cluster creation (e.g., to set options).}

\item{...}{Additonal arguments passed to \code{\link[reproducible:postProcess]{reproducible::postProcess()}},
\code{\link[reproducible:projectInputs]{reproducible::projectInputs()}},
\code{\link[reproducible:fixErrors]{reproducible::fixErrors()}}, and
\code{\link[reproducible:prepInputs]{reproducible::prepInputs()}}.}
}
\description{
This is the workhorse function that runs any analyses described in
\code{map@analyses}. It uses hashing, and will not rerun any analysis that
already ran on identical inputs.
}
\details{
This function will do a sequence of things.
First, it will run \code{expand.grid} on any columns whose names start with \code{analysisGroup},
creating a factorial set of analyses as described by these columns.
It will assess the combinations against the arguments used by the \code{functionName}.
For any \code{analysisGroup} that does not provide the correct arguments for the \code{functionName},
these \code{analysisGroups} will be omitted for that particular function.
For efficiency, the function will then assess if any of these has already been run.
For those that have not been run, it will then run the
\code{functionName} on arguments that it finds in the \code{metadata} slot of
the map obj, as well as any arguments passed in here in the \code{...}.
In general, the arguments being passed in here should be fixed across all
analyses, while any that vary by analysis should be entered into the metadata
table at the time of adding the layer to the map, via \code{mapAdd}.
}
